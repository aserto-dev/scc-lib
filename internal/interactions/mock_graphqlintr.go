// Code generated by MockGen. DO NOT EDIT.
// Source: graphqlintr.go

// Package interactions is a generated GoMock package.
package interactions

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGraphqlIntr is a mock of GraphqlIntr interface.
type MockGraphqlIntr struct {
	ctrl     *gomock.Controller
	recorder *MockGraphqlIntrMockRecorder
}

// MockGraphqlIntrMockRecorder is the mock recorder for MockGraphqlIntr.
type MockGraphqlIntrMockRecorder struct {
	mock *MockGraphqlIntr
}

// NewMockGraphqlIntr creates a new mock instance.
func NewMockGraphqlIntr(ctrl *gomock.Controller) *MockGraphqlIntr {
	mock := &MockGraphqlIntr{ctrl: ctrl}
	mock.recorder = &MockGraphqlIntrMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGraphqlIntr) EXPECT() *MockGraphqlIntrMockRecorder {
	return m.recorder
}

// Query mocks base method.
func (m *MockGraphqlIntr) Query(arg0 context.Context, arg1 interface{}, arg2 map[string]interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Query", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Query indicates an expected call of Query.
func (mr *MockGraphqlIntrMockRecorder) Query(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Query", reflect.TypeOf((*MockGraphqlIntr)(nil).Query), arg0, arg1, arg2)
}
